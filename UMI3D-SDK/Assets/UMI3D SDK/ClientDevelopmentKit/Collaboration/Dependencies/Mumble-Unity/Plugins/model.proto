syntax = "proto2";

message ACL {
   required uint32 channel_id = 1;
   optional bool inherit_acls = 2 [default = true];
   repeated ChanGroup groups = 3;
   repeated ChanACL acls = 4;
   optional bool query = 5 [default = false];
}
message Authenticate {
   optional string username = 1 [default = ""];
   optional string password = 2 [default = ""];
   repeated string tokens = 3;
   repeated int32 celt_versions = 4;
   optional bool opus = 5 [default = false];
}
message BanEntry {
   required bytes address = 1;
   required uint32 mask = 2;
   optional string name = 3 [default = ""];
   optional string hash = 4 [default = ""];
   optional string reason = 5 [default = ""];
   optional string start = 6 [default = ""];
   optional uint32 duration = 7 [default = 0];
}
message BanList {
   repeated BanEntry bans = 1;
   optional bool query = 2 [default = false];
}
message ChanACL {
   optional bool apply_here = 1 [default = true];
   optional bool apply_subs = 2 [default = true];
   optional bool inherited = 3 [default = true];
   optional uint32 user_id = 4 [default = 0];
   optional string group = 5 [default = ""];
   optional uint32 grant = 6 [default = 0];
   optional uint32 deny = 7 [default = 0];
}
message ChanGroup {
   required string name = 1;
   optional bool inherited = 2 [default = true];
   optional bool inherit = 3 [default = true];
   optional bool inheritable = 4 [default = true];
   repeated uint32 add = 5;
   repeated uint32 remove = 6;
   repeated uint32 inherited_members = 7;
}
message ChannelRemove {
   required uint32 channel_id = 1;
}
message ChannelState {
   optional uint32 channel_id = 1 [default = 0];
   optional uint32 parent = 2 [default = 0];
   optional string name = 3 [default = ""];
   repeated uint32 links = 4;
   optional string description = 5 [default = ""];
   repeated uint32 links_add = 6;
   repeated uint32 links_remove = 7;
   optional bool temporary = 8 [default = false];
   optional int32 position = 9 [default = 0];
   optional bytes description_hash = 10;
   optional uint32 max_users = 11 [default = 0];
}
message CodecVersion {
   required int32 alpha = 1;
   required int32 beta = 2;
   required bool prefer_alpha = 3;
   optional bool opus = 4 [default = false];
}
enum Context {
   Server = 1;
   Channel = 2;
   User = 4;
}
message ContextAction {
   optional uint32 session = 1 [default = 0];
   optional uint32 channel_id = 2 [default = 0];
   required string action = 3;
}
message ContextActionModify {
   required string action = 1;
   optional string text = 2 [default = ""];
   optional uint32 context = 3 [default = 0];
   optional Operation operation = 4 [default = Add];
}
message CryptSetup {
   optional bytes key = 1;
   optional bytes client_nonce = 2;
   optional bytes server_nonce = 3;
}
enum DenyType {
   Text = 0;
   Permission = 1;
   SuperUser = 2;
   ChannelName = 3;
   TextTooLong = 4;
   H9K = 5;
   TemporaryChannel = 6;
   MissingCertificate = 7;
   UserName = 8;
   ChannelFull = 9;
   NestingLimit = 10;
}
enum Operation {
   Add = 0;
   Remove = 1;
}
message PermissionDenied {
   optional uint32 permission = 1 [default = 0];
   optional uint32 channel_id = 2 [default = 0];
   optional uint32 session = 3 [default = 0];
   optional string reason = 4 [default = ""];
   optional DenyType type = 5 [default = Text];
   optional string name = 6 [default = ""];
}
message PermissionQuery {
   optional uint32 channel_id = 1 [default = 0];
   optional uint32 permissions = 2 [default = 0];
   optional bool flush = 3 [default = false];
}
message Ping {
   optional uint64 timestamp = 1 [default = 0];
   optional uint32 good = 2 [default = 0];
   optional uint32 late = 3 [default = 0];
   optional uint32 lost = 4 [default = 0];
   optional uint32 resync = 5 [default = 0];
   optional uint32 udp_packets = 6 [default = 0];
   optional uint32 tcp_packets = 7 [default = 0];
   optional float udp_ping_avg = 8 [default = 0];
   optional float udp_ping_var = 9 [default = 0];
   optional float tcp_ping_avg = 10 [default = 0];
   optional float tcp_ping_var = 11 [default = 0];
}
message QueryUsers {
   repeated uint32 ids = 1;
   repeated string names = 2;
}
message Reject {
   optional RejectType type = 1 [default = None];
   optional string reason = 2 [default = ""];
}
enum RejectType {
   None = 0;
   WrongVersion = 1;
   InvalidUsername = 2;
   WrongUserPW = 3;
   WrongServerPW = 4;
   UsernameInUse = 5;
   ServerFull = 6;
   NoCertificate = 7;
   AuthenticatorFail = 8;
}
message RequestBlob {
   repeated uint32 session_texture = 1;
   repeated uint32 session_comment = 2;
   repeated uint32 channel_description = 3;
}
message ServerConfig {
   optional uint32 max_bandwidth = 1 [default = 0];
   optional string welcome_text = 2 [default = ""];
   optional bool allow_html = 3 [default = false];
   optional uint32 message_length = 4 [default = 0];
   optional uint32 image_message_length = 5 [default = 0];
   optional uint32 max_users = 6 [default = 0];
}
message ServerSync {
   optional uint32 session = 1 [default = 0];
   optional uint32 max_bandwidth = 2 [default = 0];
   optional string welcome_text = 3 [default = ""];
   optional uint64 permissions = 4 [default = 0];
}
message Stats {
   optional uint32 good = 1 [default = 0];
   optional uint32 late = 2 [default = 0];
   optional uint32 lost = 3 [default = 0];
   optional uint32 resync = 4 [default = 0];
}
message SuggestConfig {
   optional uint32 version = 1 [default = 0];
   optional bool positional = 2 [default = false];
   optional bool push_to_talk = 3 [default = false];
}
message Target {
   repeated uint32 session = 1;
   optional uint32 channel_id = 2 [default = 0];
   optional string group = 3 [default = ""];
   optional bool links = 4 [default = false];
   optional bool children = 5 [default = false];
}
message TextMessage {
   optional uint32 actor = 1 [default = 0];
   repeated uint32 session = 2;
   repeated uint32 channel_id = 3;
   repeated uint32 tree_id = 4;
   required string message = 5;
}
message UDPTunnel {
   required bytes packet = 1;
}
message User {
   required uint32 user_id = 1;
   optional string name = 2 [default = ""];
   optional string last_seen = 3 [default = ""];
   optional uint32 last_channel = 4 [default = 0];
}
message UserList {
   repeated User users = 1;
}
message UserRemove {
   required uint32 session = 1;
   optional uint32 actor = 2 [default = 0];
   optional string reason = 3 [default = ""];
   optional bool ban = 4 [default = false];
}
message UserState {
   optional uint32 session = 1 [default = 0];
   optional uint32 actor = 2 [default = 0];
   optional string name = 3 [default = ""];
   optional uint32 user_id = 4 [default = 0];
   optional uint32 channel_id = 5 [default = 0];
   optional bool mute = 6 [default = false];
   optional bool deaf = 7 [default = false];
   optional bool suppress = 8 [default = false];
   optional bool self_mute = 9 [default = false];
   optional bool self_deaf = 10 [default = false];
   optional bytes texture = 11;
   optional bytes plugin_context = 12;
   optional string plugin_identity = 13 [default = ""];
   optional string comment = 14 [default = ""];
   optional string hash = 15 [default = ""];
   optional bytes comment_hash = 16;
   optional bytes texture_hash = 17;
   optional bool priority_speaker = 18 [default = false];
   optional bool recording = 19 [default = false];
}
message UserStats {
   optional uint32 session = 1 [default = 0];
   optional bool stats_only = 2 [default = false];
   repeated bytes certificates = 3;
   optional Stats from_client = 4;
   optional Stats from_server = 5;
   optional uint32 udp_packets = 6 [default = 0];
   optional uint32 tcp_packets = 7 [default = 0];
   optional float udp_ping_avg = 8 [default = 0];
   optional float udp_ping_var = 9 [default = 0];
   optional float tcp_ping_avg = 10 [default = 0];
   optional float tcp_ping_var = 11 [default = 0];
   optional Version version = 12;
   repeated int32 celt_versions = 13;
   optional bytes address = 14;
   optional uint32 bandwidth = 15 [default = 0];
   optional uint32 onlinesecs = 16 [default = 0];
   optional uint32 idlesecs = 17 [default = 0];
   optional bool strong_certificate = 18 [default = false];
   optional bool opus = 19 [default = false];
}
message Vector2 {
   optional float x = 1;
   optional float y = 2;
   optional float x = 3;
   optional float y = 4;
   optional float x = 5;
   optional float y = 6;
   optional float x = 7;
   optional float y = 8;
   optional float x = 9;
   optional float y = 10;
   optional float x = 11;
   optional float y = 12;
   optional float x = 13;
   optional float y = 14;
   optional float x = 15;
   optional float y = 16;
   optional float x = 17;
   optional float y = 18;
   optional float x = 19;
   optional float y = 20;
   optional float x = 21;
   optional float y = 22;
   optional float x = 23;
   optional float y = 24;
   optional float x = 25;
   optional float y = 26;
   optional float x = 27;
   optional float y = 28;
   optional float x = 29;
   optional float y = 30;
   optional float x = 31;
   optional float y = 32;
   optional float x = 33;
   optional float y = 34;
   optional float x = 35;
   optional float y = 36;
   optional float x = 37;
   optional float y = 38;
   optional float x = 39;
   optional float y = 40;
   optional float x = 41;
   optional float y = 42;
   optional float x = 43;
   optional float y = 44;
   optional float x = 45;
   optional float y = 46;
   optional float x = 47;
   optional float y = 48;
   optional float x = 49;
   optional float y = 50;
   optional float x = 51;
   optional float y = 52;
   optional float x = 53;
   optional float y = 54;
   optional float x = 55;
   optional float y = 56;
   optional float x = 57;
   optional float y = 58;
   optional float x = 59;
   optional float y = 60;
   optional float x = 61;
   optional float y = 62;
   optional float x = 63;
   optional float y = 64;
   optional float x = 65;
   optional float y = 66;
   optional float x = 67;
   optional float y = 68;
   optional float x = 69;
   optional float y = 70;
   optional float x = 71;
   optional float y = 72;
}
message Vector3 {
   optional float x = 1;
   optional float y = 2;
   optional float z = 3;
   optional float x = 4;
   optional float y = 5;
   optional float z = 6;
   optional float x = 7;
   optional float y = 8;
   optional float z = 9;
   optional float x = 10;
   optional float y = 11;
   optional float z = 12;
   optional float x = 13;
   optional float y = 14;
   optional float z = 15;
   optional float x = 16;
   optional float y = 17;
   optional float z = 18;
   optional float x = 19;
   optional float y = 20;
   optional float z = 21;
   optional float x = 22;
   optional float y = 23;
   optional float z = 24;
   optional float x = 25;
   optional float y = 26;
   optional float z = 27;
   optional float x = 28;
   optional float y = 29;
   optional float z = 30;
   optional float x = 31;
   optional float y = 32;
   optional float z = 33;
   optional float x = 34;
   optional float y = 35;
   optional float z = 36;
   optional float x = 37;
   optional float y = 38;
   optional float z = 39;
   optional float x = 40;
   optional float y = 41;
   optional float z = 42;
   optional float x = 43;
   optional float y = 44;
   optional float z = 45;
   optional float x = 46;
   optional float y = 47;
   optional float z = 48;
   optional float x = 49;
   optional float y = 50;
   optional float z = 51;
   optional float x = 52;
   optional float y = 53;
   optional float z = 54;
   optional float x = 55;
   optional float y = 56;
   optional float z = 57;
   optional float x = 58;
   optional float y = 59;
   optional float z = 60;
   optional float x = 61;
   optional float y = 62;
   optional float z = 63;
   optional float x = 64;
   optional float y = 65;
   optional float z = 66;
   optional float x = 67;
   optional float y = 68;
   optional float z = 69;
   optional float x = 70;
   optional float y = 71;
   optional float z = 72;
   optional float x = 73;
   optional float y = 74;
   optional float z = 75;
   optional float x = 76;
   optional float y = 77;
   optional float z = 78;
   optional float x = 79;
   optional float y = 80;
   optional float z = 81;
   optional float x = 82;
   optional float y = 83;
   optional float z = 84;
   optional float x = 85;
   optional float y = 86;
   optional float z = 87;
   optional float x = 88;
   optional float y = 89;
   optional float z = 90;
   optional float x = 91;
   optional float y = 92;
   optional float z = 93;
   optional float x = 94;
   optional float y = 95;
   optional float z = 96;
   optional float x = 97;
   optional float y = 98;
   optional float z = 99;
   optional float x = 100;
   optional float y = 101;
   optional float z = 102;
   optional float x = 103;
   optional float y = 104;
   optional float z = 105;
   optional float x = 106;
   optional float y = 107;
   optional float z = 108;
}
message Version {
   optional uint32 version = 1 [default = 0];
   optional string release = 2 [default = ""];
   optional string os = 3 [default = ""];
   optional string os_version = 4 [default = ""];
}
message VoiceTarget {
   optional uint32 id = 1 [default = 0];
   repeated Target targets = 2;
}
